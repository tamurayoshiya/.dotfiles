# ---------------------------------------
# for Vim8 to activate denite and deoplete
# ---------------------------------------

[[plugins]]
repo = 'roxma/nvim-yarp'
if = "!has('nvim')"
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = "!has('nvim')"

# ---------------------------------------
# funtamental plugins
# ---------------------------------------

[[plugins]]
repo = 'Shougo/dein.vim'
[[plugins]]
repo = 'Shougo/denite.nvim'
[[plugins]]
repo = 'Shougo/neosnippet.vim'
[[plugins]]
repo = 'Shougo/neosnippet-snippets'
[[plugins]]
repo = 'Shougo/neoyank.vim'
[[plugins]]
repo = 'Shougo/neomru.vim'
[[plugins]]
repo = 'h1mesuke/unite-outline'
[[plugins]]
repo = 'tomtom/tcomment_vim'
[[plugins]]
repo = 'jimsei/winresizer'
[[plugins]]
repo = 'airblade/vim-gitgutter'
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
[[plugins]]
repo = 'tpope/vim-surround'
[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'
[[plugins]]
repo = 'Shougo/context_filetype.vim'
[[plugins]]
repo = 'scrooloose/nerdtree'
[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
[[plugins]]
repo = 'ap/vim-css-color'
# Ale fixのみ利用, ale_enabled=0
[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
    if dein#util#_is_windows()
        let cmd = 'tools\\update-dll-mingw'
    elseif dein#util#_is_cygwin()
        let cmd = 'make -f make_cygwin.mak'
    elseif executable('gmake')
        let cmd = 'gmake'
    else
        let cmd = 'make'
    endif
    let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
on_i = 1
merged = '0'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'pechorin/any-jump.vim'

# ---------------------------------------
# denite
# ---------------------------------------

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
on_event = 'BufRead'
hook_post_source = '''
    call denite#custom#var('file_rec', 'command',
    \ ['pt', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', ''])
    call denite#custom#var('grep', 'command',
    \ ['pt', '--nogroup', '--nocolor', '--smart-case', '--hidden'])
    call denite#custom#var('grep', 'default_opts', [])
    call denite#custom#var('grep', 'recursive_opts', [])
'''
[[plugins]]
repo =  'chemzqm/denite-git'

# ---------------------------------------
# themes
# ---------------------------------------

[[plugins]]
repo = 'itchyny/lightline.vim'
[[plugins]]
repo = 'kristijanhusak/vim-hybrid-material'
[[plugins]]
repo = 'morhetz/gruvbox'
[[plugins]]
repo = 'danilo-augusto/vim-afterglow'

# ---------------------------------------
# fzf
# ---------------------------------------
[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'
[[plugins]]
repo = 'junegunn/fzf.vim'
[[plugins]]
repo = 'antoinemadec/coc-fzf'


[[plugins]]
repo = 'neovim/nvim-lspconfig'
# https://zenn.dev/kawarimidoll/articles/2b57745045b225
hook_add = '''
lua << EOF
local nvim_lsp = require('lspconfig')
local is_node_dir = function()
  return nvim_lsp.util.root_pattern('package.json')(vim.fn.getcwd())
end

-- ts_ls
local ts_opts = {}
ts_opts.on_attach = function(client)
  if not is_node_dir() then
    client.stop(true)
  end
end
nvim_lsp.ts_ls.setup(ts_opts)

-- denols
local deno_opts = {}
deno_opts.on_attach = function(client)
  if is_node_dir() then
    client.stop(true)
  end
end
nvim_lsp.denols.setup(deno_opts)
EOF
'''
